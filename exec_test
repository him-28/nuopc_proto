#!/usr/bin/expect --
 
set test_type [lindex $argv 0]
set ESMF_DIR [lindex $argv 1]
set ESMF_BOPT [lindex $argv 2]
set ESMF_COMM [lindex $argv 3]
set SYS_TEST_TYPE [lindex $argv 4]
set UNIT_TEST_TYPE [lindex $argv 5]
set U_TESTS [lindex $argv 6]
set THREADED [lindex $argv 7]
set homedir [lindex $argv 8]
set APPSDIR [lindex $argv 9]
set bash_pid [spawn /bin/bash]


set prompt "(%|>|#|\\$) $"          ;# default prompt

catch {set prompt $env(EXPECT_PROMPT)}

expect -re $prompt

send "export ESMF_OS=`uname -s` \r"

expect -re $prompt

send "export ESMF_COMPILER=intel \r"

expect -re $prompt

send "export ESMF_SITE=default \r"

expect -re $prompt

send "export APPSDIR=$APPSDIR \r"

expect -re $prompt

send "cd $ESMF_DIR \r"

expect -re $prompt

send "rm queue_results \r"

expect -re $prompt

if { $U_TESTS == "EX" } {
	send "export  ESMF_TESTEXHAUSTIVE=ON \r"
} else {
	send "export ESMF_TESTEXHAUSTIVE=OFF \r"
}

expect -re $prompt

if { $THREADED == "THREADED" } {
	send "export ESMF_TESTWITHTHREADS=ON \r"
} else {
	send "export ESMF_TESTWITHTHREADS=OFF \r"
}

expect -re $prompt

send " export PBS_ACCOUNT=P93300606 \r"

expect -re $prompt


#spawn  qinteractive -l select=1:ncpus=8:mpiprocs=10 -l walltime=00:30:00
spawn qsub -I -l select=1:ncpus=2:mpiprocs=4 -l walltime=05:30:00 -q regular -A P93300606
set timeout 5000

set prompt "(%|>|#|\\$) $"          ;# default prompt

catch {set prompt $env(EXPECT_PROMPT)}

expect {
	"ready"
		{
			send " cd $ESMF_DIR\r" 
		} 
	timeout 
		{
			puts "no queue available " ;
			set file [ open queue_results w]
			puts $file "failed"
			send \003 

			expect {
				-re $prompt
					{
						send "echo '1'\r"
					}
				"terminated"
					{
						send " \r"
					}
				}
		}
	}



set prompt "(%|>|#|\\$) $"          ;# default prompt

catch {set prompt $env(EXPECT_PROMPT)}

expect {
	-re $prompt
		{
			send "echo '5'\r"
		}
	eof
		{
			exit 1
		}
	}

send "echo '4'\r"
puts "Got a queue "
set file [ open queue_results w]
puts $file "passed"

expect -re $prompt

send "cd $ESMF_DIR \r"

expect -re $prompt

set timeout 7800

if { $test_type == "demo" } {
	if { $SYS_TEST_TYPE == "UNI" } {

        	send "gmake run_demos_uni > tmp\r"

	} else {

        	send "gmake run_demos > tmp\r"
	}

} elseif { $test_type == "sys_test" } {

	if { $SYS_TEST_TYPE == "UNI" } {

		send "gmake run_system_tests_uni  > tmp\r"

	} else {

		send "gmake  run_system_tests  > tmp\r"
	}

} elseif { $test_type == "examples" } {


	if { $SYS_TEST_TYPE == "UNI" } {

        	send "gmake run_examples_uni  > tmp\r"

	} else {

        	send "gmake run_examples  > tmp\r"
	}

} elseif { $test_type == "unit" } {

	if { $UNIT_TEST_TYPE == "UNI" } {

        	send "gmake run_unit_tests_uni  > tmp\r"

	} else {

        	send "gmake run_unit_tests  > tmp\r"
	}
} elseif { $test_type == "apps_test" } {
        
        send "cd $APPSDIR \r"

        expect -re $prompt

        send "$homedir/bin/apps_test mpirun \r"


}
 
expect {
	-re $prompt
                        {
        
                                send "exit\r"
        
                        }
        "completed"
                        {

                                send "\r"

                        }

        }

expect -re $prompt

